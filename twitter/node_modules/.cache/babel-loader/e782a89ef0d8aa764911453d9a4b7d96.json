{"ast":null,"code":"import _slicedToArray from \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/messages/messages.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport logo from \"../../svg/logo.svg\";\nimport axios from 'axios';\nimport './messages.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../../components/search/search.js';\nimport MessageBox from './chatBox.js'; //import MessageCard from './chatList.js';\n\nimport './chatList.css';\n\nconst SendMessageModal = props => {\n  const buttonLabel = props.buttonLabel,\n        className = props.className;\n  console.log(props);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const toggle = () => setModal(!modal);\n\n  const sendMessage = () => {\n    console.log(\"inside handle submit\"); //this.props.sendMessage(this.state.message)\n\n    let data2 = {\n      \"chatId\": props.chat_id,\n      \"senderId\": localStorage.getItem('id'),\n      \"receiverId\": props.receiver_id,\n      \"message\": document.getElementById('sendChatMessage').value\n    };\n    axios.post('/messages/addMessageToChat', data2).then(response => {\n      console.log('response ok', response);\n      console.log(\"Status Code : \", response);\n\n      if (response.data != \"error\") {\n        window.location.reload();\n      }\n\n      if (response.data == \"error\") {\n        alert(\"Invalid credentials\");\n      }\n    }).catch(response => {\n      alert(\"Invalid\");\n      this.setState({});\n    }); // let data={\n    //   \"senderId\" : localStorage.getItem('id'),\n    //   \"receiverId\" : localStorage.getItem('otherUserId'),\n    //   \"message\": document.getElementById('sendChatMessage').value,\n    //   \"senderHandle\" :localStorage.getItem('userHandle'),\n    //   \"receiverHandle\" :localStorage.getItem('otherUserHandle')\n    // }\n    // axios.defaults.withCredentials=true\n    // axios.post('/messages/createChat',data)\n    // .then((response)=>{\n    //   console.log('create cht resp',response.data)\n    //   if(localStorage.getItem('chats')==null)\n    //     localStorage.setItem('chats',response.data._id)\n    //   else\n    //     localStorage.setItem('chats',localStorage.getItem('chats')+\",\"+response.data._id)\n    //   window.location.reload()\n    // })\n    // .catch((err)=>{\n    //   console.log('err create chat',err)\n    // })\n  };\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"success\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Send Message\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"exampleEmail\",\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Message\"), React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"sendChatMessage\",\n    placeholder: \"send a message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nconst ReceiveModal = props => {\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  console.log('props-->', props);\n  let chatArr = props['gettingchat'];\n  let handles = props['handles'];\n  let divToggle = '';\n  let dispChat;\n\n  if (chatArr != undefined) {\n    dispChat = chatArr.map(item => {\n      console.log('item', item['senderId']);\n      console.log('loc', localStorage.getItem('id'));\n      divToggle = item['senderId'] == localStorage.getItem('id') ? divToggle = 'right' : divToggle = 'left';\n      console.log('divToggle', divToggle);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: divToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, item['message']), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"View Chat\"), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, dispChat), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nclass MessageCard extends React.Component {\n  constructor(props) {\n    super(props); //this.getChat = this.getChat.bind(this);\n\n    this.state = {\n      gettingchat: []\n    };\n  }\n\n  getChat(chatId) {\n    console.log('here');\n    axios.defaults.withCredentials = true;\n    axios.get(\"/messages/getChat/\".concat(chatId)).then(response => {\n      //console.log('response ok',response)\n      console.log(\"All Chats:\", response.data);\n\n      if (response.data == \"error\") {\n        alert(\"Invalid credentials\");\n      }\n\n      this.setState({\n        gettingchat: response.data\n      }, () => {\n        console.log(this.state.gettingchat);\n      });\n    }).catch(response => {\n      alert(\"Invalid\");\n      this.setState({});\n    });\n  }\n\n  render() {\n    console.log(this.props.chatList);\n    let dispAll = null;\n\n    if (this.props.chatList != null) {\n      dispAll = this.props.chatList.map(chat => {\n        console.log('=>', chat);\n        return React.createElement(\"div\", {\n          className: \"Messages-Card-indi\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \" \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Messages-Image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Messages-Card-Body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Messages-Card-Body-Content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(SendMessageModal, {\n          chat_id: chat._id,\n          receiver_id: chat.users[0] == localStorage.getItem('id') ? chat.users[1] : chat.users[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          className: \"Messages-Card-Body-Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"Messages-Card-Body-Handle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, chat.userHandles[0] == localStorage.getItem('userHandle') ? chat.userHandles[1] : chat.userHandles[0]), React.createElement(\"p\", {\n          className: \"Messages-Card-Body-Date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }), React.createElement(ReceiveModal, {\n          color: \"danger\",\n          gettingchat: chat['messages'],\n          handles: chat['userHandles'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }))));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"MessagesCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass MessageList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatList: [],\n      chat: []\n    };\n  }\n\n  componentWillMount() {\n    let data = {\n      chats: localStorage.getItem('chats') // chats: \"5de48e956528003d3887b7b3,5de491e4aff08e0c8cdab48e\"\n\n    };\n    axios.defaults.withCredentials = true;\n    axios.post('/messages/getAllChats', data).then(response => {\n      console.log('response ok', response);\n      console.log(\"All Chats:\", response.data);\n\n      if (response.data == \"error\") {\n        alert(\"Invalid credentials\");\n      }\n\n      this.setState({\n        chatList: response.data\n      }, () => {\n        console.log(this.state.chatList);\n      });\n    }).catch(response => {\n      alert(\"Invalid\");\n      this.setState({});\n    });\n  }\n\n  render() {\n    let a;\n\n    if (this.state.chat.length == 0 || this.state.chat == undefined) {\n      a = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n    } else {\n      a = React.createElement(\"div\", {\n        className: \"Messages-RightSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(MessageList, {\n        chat: this.state.chat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Messages-Navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"MessagesBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"MessagesBarTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Messages\")))), React.createElement(\"div\", {\n      type: \"button\",\n      className: \"Messages-Messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      type: \"button\",\n      className: \"Messages-Messages-Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(MessageCard, {\n      chatList: this.state.chatList,\n      chat: this.state.chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Messages-RightSide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chat-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/messages/messages.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Row","Col","Form","FormGroup","Label","Input","axios","Navigation","RightSide","MessageBox","SendMessageModal","props","buttonLabel","className","console","log","modal","setModal","toggle","sendMessage","data2","chat_id","localStorage","getItem","receiver_id","document","getElementById","value","post","then","response","data","window","location","reload","alert","catch","setState","ReceiveModal","chatArr","handles","divToggle","dispChat","undefined","map","item","MessageCard","Component","constructor","state","gettingchat","getChat","chatId","defaults","withCredentials","get","render","chatList","dispAll","chat","_id","users","userHandles","MessageList","Messages","componentWillMount","chats","a","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nimport logo from '../../svg/logo.svg';\nimport axios from 'axios';\nimport './messages.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../../components/search/search.js';\nimport MessageBox from './chatBox.js';\n//import MessageCard from './chatList.js';\nimport './chatList.css';\n\n\nconst SendMessageModal = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  console.log(props);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\nconst sendMessage=()=>{\n\n  console.log(\"inside handle submit\");\n  //this.props.sendMessage(this.state.message)\n  let data2 =\n  {\n    \"chatId\" : props.chat_id,\n    \"senderId\" : localStorage.getItem('id'),\n    \"receiverId\" : props.receiver_id,\n    \"message\" : document.getElementById('sendChatMessage').value\n  }\n  axios.post('/messages/addMessageToChat', data2)\n    .then((response) => {\n        console.log('response ok',response)\n        console.log(\"Status Code : \", response);\n\n        if(response.data!=\"error\")\n        {\n            window.location.reload()\n        }\n\n        if(response.data==\"error\")\n        {\n            alert(\"Invalid credentials\");\n        }\n\n    })\n    .catch (response => {\n        alert(\"Invalid\");\n        this.setState({});\n      }\n    )\n\n\n  // let data={\n  //   \"senderId\" : localStorage.getItem('id'),\n  //   \"receiverId\" : localStorage.getItem('otherUserId'),\n  //   \"message\": document.getElementById('sendChatMessage').value,\n  //   \"senderHandle\" :localStorage.getItem('userHandle'),\n  //   \"receiverHandle\" :localStorage.getItem('otherUserHandle')\n  // }\n  // axios.defaults.withCredentials=true\n  // axios.post('/messages/createChat',data)\n  // .then((response)=>{\n  //   console.log('create cht resp',response.data)\n  //   if(localStorage.getItem('chats')==null)\n  //     localStorage.setItem('chats',response.data._id)\n  //   else\n  //     localStorage.setItem('chats',localStorage.getItem('chats')+\",\"+response.data._id)\n  //   window.location.reload()\n  // })\n  // .catch((err)=>{\n  //   console.log('err create chat',err)\n  // })\n}\n  return (\n    <span>\n      <Button color=\"success\" onClick={toggle}>Send Message</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        {/* <ModalHeader toggle={toggle}>Message</ModalHeader> */}\n        <ModalBody>\n        <Form>\n      <FormGroup row>\n        <Label for=\"exampleEmail\" sm={2}>Message</Label>\n        <Col sm={10}>\n          <Input type=\"email\" name=\"email\" id=\"sendChatMessage\" placeholder=\"send a message\"  />\n        </Col>\n      </FormGroup>\n      </Form>\n        </ModalBody>\n        <ModalFooter>\n          {/* <ReceiveModal/> */}\n          <Button color=\"primary\" onClick={sendMessage}>Send</Button>\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </span>\n  );\n}\n\n\nconst ReceiveModal = (props) => {\n\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  console.log('props-->',props);\n  let chatArr=props['gettingchat']\n  let handles=props['handles']\n  let divToggle='';\n  let dispChat\n  if(chatArr!=undefined){\n   dispChat=chatArr.map((item)=>{\n    console.log('item',item['senderId'])\n    console.log('loc',localStorage.getItem('id'))\n    divToggle=(item['senderId']==localStorage.getItem('id')?divToggle='right':divToggle='left')\n    console.log('divToggle',divToggle)\n    return(\n      <div>\n        {/* <div className={divToggle}><i>{item['time']}</i> |</div> */}\n        <div className={divToggle}>{item['message']}</div>\n        <hr/>\n        <br/>\n      </div>\n    )\n  })\n}\n  return (\n    <div>\n      <Button color=\"danger\" onClick={toggle}>View Chat</Button>\n      <Modal isOpen={modal} toggle={toggle} >\n        {/* <ModalHeader toggle={toggle}>{handles[0]} | {handles[1]}</ModalHeader> */}\n        <ModalBody>\n          {dispChat}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nclass MessageCard extends React.Component{\n\n  constructor(props){\n    super(props)\n\n    //this.getChat = this.getChat.bind(this);\n    this.state = {\n      gettingchat: [],\n    }\n  }\n\n  getChat(chatId){\n    console.log('here');\n    axios.defaults.withCredentials=true\n    axios.get(`/messages/getChat/${chatId}`)\n      .then((response) => {\n          //console.log('response ok',response)\n          console.log(\"All Chats:\", response.data);\n\n          if(response.data==\"error\")\n          {\n              alert(\"Invalid credentials\");\n          }\n\n          this.setState({gettingchat: response.data}, ()=>{\n            console.log(this.state.gettingchat);\n          });\n\n      })\n      .catch (response => {\n          alert(\"Invalid\");\n          this.setState({});\n      })\n  }\n\n  render() {\n      console.log(this.props.chatList);\n      let dispAll=null\n      if(this.props.chatList!=null)\n      {\n        dispAll=this.props.chatList.map(chat => {\n          console.log('=>',chat)\n          return(\n              <div className=\"Messages-Card-indi\"> {/*href=\"/chat\"*/}\n              <div>\n                  <div className=\"Messages-Image\">\n                    <br/>\n                    {/*<img className=\"Messagesimage\" src={_id.image}/>*/}\n                  </div>\n                  <div className=\"Messages-Card-Body\">\n                    <br/>\n                    <div className=\"Messages-Card-Body-Content\">\n                      <SendMessageModal chat_id={chat._id} receiver_id={chat.users[0] == localStorage.getItem('id')? chat.users[1]: chat.users[0]}/>\n                      <h5 className=\"Messages-Card-Body-Name\"></h5>\n                      <p className=\"Messages-Card-Body-Handle\">{\n                        chat.userHandles[0] == localStorage.getItem('userHandle')? chat.userHandles[1]: chat.userHandles[0]\n                      }</p>\n                      <p className=\"Messages-Card-Body-Date\">{/*{messageList.date}*/}</p>\n                      <ReceiveModal color=\"danger\" gettingchat={chat['messages']} handles={chat['userHandles']}/>\n                    </div>\n                    <br/>\n                  </div>\n              </div>\n            </div>\n           )\n         })\n      }\n      return(\n        <div className = \"MessagesCard\">\n          {}\n        </div>\n      )\n    }\n}\n\nclass MessageList extends React.Component {\n\n    constructor(props){\n      super(props)\n\n    }\n\n    render() {\n        return (\n          <div>\n\n            {/*<ul className=\"message-list\">\n                  {this.props.chat.map(message => {\n                      return (\n                        <li className=\"message\">\n                          <div>{message.message}</div> {/* this was sender id\n                        </li>\n                      )\n                  })}\n              </ul>*/}\n          </div>\n       )\n    }\n}\n\nclass Messages extends React.Component {\n\n  constructor(props) {\n    super(props)\n      this.state = {\n        chatList: [],\n        chat: []\n      };\n  }\n\n  componentWillMount(){\n    let data = {\n      chats: localStorage.getItem('chats')\n      // chats: \"5de48e956528003d3887b7b3,5de491e4aff08e0c8cdab48e\"\n    }\n    axios.defaults.withCredentials=true\n    axios.post('/messages/getAllChats', data)\n      .then((response) => {\n          console.log('response ok',response)\n          console.log(\"All Chats:\", response.data);\n\n          if(response.data==\"error\")\n          {\n              alert(\"Invalid credentials\");\n          }\n\n          this.setState({chatList: response.data}, ()=>{\n            console.log(this.state.chatList);\n          });\n\n      })\n      .catch (response => {\n          alert(\"Invalid\");\n          this.setState({});\n      })\n  }\n\n  render(){\n    let a;\n    if(this.state.chat.length == 0 || this.state.chat == undefined){\n      a = <div></div>;\n    }else{\n      a = <div className=\"Messages-RightSide\">\n            <div className=\"chat-div\">\n              <MessageList chat={this.state.chat} />\n              {/*<SendMessageForm sendMessage={this.sendMessage} />*/}\n            </div>\n          </div>\n    }\n  return (\n    <div className=\"Messages\">\n\n      <div className=\"Messages-Navigation\">\n        <Navigation />\n      </div>\n      <div className=\"MessagesBar\">\n        <div>\n          <Button className=\"MessagesBarTitle\"><h3>Messages</h3></Button>\n        </div>\n      </div>\n      <div type=\"button\" className=\"Messages-Messages\">\n        <div type=\"button\" className=\"Messages-Messages-Card\">\n          <MessageCard chatList={this.state.chatList} chat={this.state.chat}/>\n        </div>\n      </div>\n      {/*\n      <div type=\"button\" className=\"Messages-RightSide\">\n          <div className=\"Messages-RightSide-PreLoad\">\n            <MessageBox/>\n          </div>\n      </div>*/}\n      <div className=\"Messages-RightSide\">\n          <div className=\"chat-div\">\n            <MessageList  />\n            {/*<SendMessageForm sendMessage={this.sendMessage} />*/}\n          </div>\n      </div>\n\n    </div>\n  )\n  }\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}