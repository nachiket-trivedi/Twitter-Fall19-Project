{"ast":null,"code":"var _jsxFileName = \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/pages/dashboard/numberOfViews.js\";\nimport React from 'react';\nimport { Bar, Doughnut, Polar, Line, Radar, Bubble } from 'react-chartjs-2';\nimport axios from 'axios';\nlet response_data = [];\nlet labels = [];\n\nclass NumberOfViews extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentWillMount() {\n    axios.defaults.withCredentials = true;\n    axios.get('/dashboard/getTweets/' + localStorage.getItem('id')).then(response => {\n      console.log('data loaded is -------------->', response.data);\n      response_data = response.data;\n      let bc = [];\n      let lastDay = 0;\n      let lastMonth = 0;\n      let lastYear = 0;\n      let today = new Date();\n\n      for (let tweet of response_data) {\n        let viewDates = tweet.viewDate;\n        console.log(viewDates);\n\n        for (let date of viewDates) {\n          let tweetDate = date.split('-');\n\n          if (tweetDate[2] == today.getFullYear()) {\n            lastYear++;\n\n            if (tweetDate[0] == today.getMonth() + 1) {\n              lastMonth++;\n\n              if (tweetDate[1] == today.getDate()) {\n                lastDay++;\n              }\n            }\n          }\n        }\n      }\n\n      console.log(\"Uppar\");\n      let data = [lastDay, lastMonth, lastYear];\n      let labels = [\"Last Day\", \"Last Month\", \"Last Year\"];\n\n      for (let i = 0; i < 3; i++) {\n        bc.push(\"#xxxxxx\".replace(/x/g, y => (Math.random() * 16 | 0).toString(16)));\n      }\n\n      console.log(\"Neeche\");\n      this.setState({\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"View Count\",\n            data: data,\n            backgroundColor: bc\n          }]\n        }\n      });\n      console.log(data);\n    }).catch(error => {\n      console.log(\"Error: \" + JSON.stringify(error));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Polar, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: \"Profile Views per Day / Month / Year\",\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              min: 0\n            }\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NumberOfViews;","map":{"version":3,"sources":["/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/pages/dashboard/numberOfViews.js"],"names":["React","Bar","Doughnut","Polar","Line","Radar","Bubble","axios","response_data","labels","NumberOfViews","Component","constructor","props","state","chartData","componentWillMount","defaults","withCredentials","get","localStorage","getItem","then","response","console","log","data","bc","lastDay","lastMonth","lastYear","today","Date","tweet","viewDates","viewDate","date","tweetDate","split","getFullYear","getMonth","getDate","i","push","replace","y","Math","random","toString","setState","datasets","label","backgroundColor","catch","error","JSON","stringify","render","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,QAAb,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2CC,MAA3C,QAAwD,iBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,aAAa,GAAG,EAApB;AAGA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,aAAN,SAA4BV,KAAK,CAACW,SAAlC,CAA4C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACnB,UAAMA,KAAN;AAGG,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAMD;;AAEDC,EAAAA,kBAAkB,GAAE;AAElBT,IAAAA,KAAK,CAACU,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAU,0BAAwBC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAlC,EACCC,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CF,QAAQ,CAACG,IAAtD;AACAlB,MAAAA,aAAa,GAAGe,QAAQ,CAACG,IAAzB;AAEA,UAAIC,EAAE,GAAG,EAAT;AAEA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,QAAQ,GAAG,CAAf;AAEA,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,WAAI,IAAIC,KAAR,IAAiBzB,aAAjB,EAA+B;AAE3B,YAAI0B,SAAS,GAAGD,KAAK,CAACE,QAAtB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;;AACA,aAAI,IAAIE,IAAR,IAAgBF,SAAhB,EAA0B;AACtB,cAAIG,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAhB;;AAEA,cAAGD,SAAS,CAAC,CAAD,CAAT,IAAgBN,KAAK,CAACQ,WAAN,EAAnB,EAAuC;AACnCT,YAAAA,QAAQ;;AACR,gBAAGO,SAAS,CAAC,CAAD,CAAT,IAAiBN,KAAK,CAACS,QAAN,KAAmB,CAAvC,EAA0C;AACtCX,cAAAA,SAAS;;AACT,kBAAGQ,SAAS,CAAC,CAAD,CAAT,IAAgBN,KAAK,CAACU,OAAN,EAAnB,EAAmC;AAC/Bb,gBAAAA,OAAO;AACV;AACJ;AACJ;AACJ;AACJ;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAIC,IAAI,GAAE,CAACE,OAAD,EAAUC,SAAV,EAAqBC,QAArB,CAAV;AACA,UAAIrB,MAAM,GAAG,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,CAAb;;AACA,WAAI,IAAIiC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,CAAlB,EAAqBA,CAAC,EAAtB,EAAyB;AACrBf,QAAAA,EAAE,CAACgB,IAAH,CAAQ,UAAUC,OAAV,CAAkB,IAAlB,EAAwBC,CAAC,IAAE,CAACC,IAAI,CAACC,MAAL,KAAc,EAAd,GAAiB,CAAlB,EAAqBC,QAArB,CAA8B,EAA9B,CAA3B,CAAR;AACH;;AACDxB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKwB,QAAL,CAAc;AACVlC,QAAAA,SAAS,EAAG;AACRN,UAAAA,MAAM,EAAGA,MADD;AAERyC,UAAAA,QAAQ,EAAG,CACP;AACIC,YAAAA,KAAK,EAAG,YADZ;AAEIzB,YAAAA,IAAI,EAAEA,IAFV;AAGI0B,YAAAA,eAAe,EAAGzB;AAHtB,WADO;AAFH;AADF,OAAd;AAYAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH,KAnDD,EAoDC2B,KApDD,CAoDOC,KAAK,IAAE;AACV9B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAU8B,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAtB;AACH,KAtDD;AAwDD;;AAEDG,EAAAA,MAAM,GAAE;AAEN,WACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAE,KAAK3C,KAAL,CAAWC,SADlB;AAEC,MAAA,OAAO,EACP;AACC2C,QAAAA,KAAK,EAAC;AACLC,UAAAA,OAAO,EAAC,IADH;AAELC,UAAAA,IAAI,wCAFC;AAGLC,UAAAA,QAAQ,EAAC;AAHJ,SADP;AAMCC,QAAAA,MAAM,EAAC;AACNH,UAAAA,OAAO,EAAC,IADF;AAENI,UAAAA,QAAQ,EAAC;AAFH,SANR;AAUmBC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHC,cAAAA,WAAW,EAAC,IADT;AAEHC,cAAAA,GAAG,EAAE;AAFF;AADH,WAAD;AADH;AAV3B,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CADE;AAiCD;;AA9GyC;;AAiH5C,eAAe1D,aAAf","sourcesContent":["import React from 'react';\nimport {Bar, Doughnut, Polar, Line, Radar, Bubble} from 'react-chartjs-2';\nimport axios from 'axios';\n\nlet response_data = [\n];\n\nlet labels = []\n\nclass NumberOfViews extends React.Component {\n\n  constructor(props){\n\tsuper(props);\n\t\n\n    this.state = {\n    \tchartData :{\n\n      \t}\n    }\n    \n  }\n\n  componentWillMount(){\n\n    axios.defaults.withCredentials = true;\n    axios.get('/dashboard/getTweets/'+localStorage.getItem('id'))\n    .then(response => {\n        console.log('data loaded is -------------->',response.data)\n        response_data = response.data;\n        \n        let bc = []\n\n        let lastDay = 0;\n        let lastMonth = 0; \n        let lastYear = 0;\n\n        let today = new Date();\n\n        for(let tweet of response_data){\n\n            let viewDates = tweet.viewDate;\n            console.log(viewDates);\n            for(let date of viewDates){\n                let tweetDate = date.split('-');\n                \n                if(tweetDate[2] == today.getFullYear()){\n                    lastYear++;\n                    if(tweetDate[0] == (today.getMonth() + 1)){\n                        lastMonth++;\n                        if(tweetDate[1] == today.getDate()){\n                            lastDay++;\n                        }\n                    }\n                }\n            }\n        }\n        console.log(\"Uppar\");\n        let data =[lastDay, lastMonth, lastYear];\n        let labels = [\"Last Day\", \"Last Month\", \"Last Year\"];\n        for(let i = 0; i <3; i++){\n            bc.push(\"#xxxxxx\".replace(/x/g, y=>(Math.random()*16|0).toString(16)));\n        }\n        console.log(\"Neeche\");\n        this.setState({\n            chartData : {\n                labels : labels,\n                datasets : [\n                    {\n                        label : \"View Count\",\n                        data: data,\n                        backgroundColor : bc\n                    }\n                ]\n            }\n        })\n        console.log(data);\n    })\n    .catch(error=>{\n        console.log(\"Error: \"+JSON.stringify(error));\n    });\n\n  }\n\n  render(){\n\t\n    return(\n\t\t<div>\n\t\t\t<div className=\"chart\">\n\t\t\t\t<Polar\n\t\t\t\t\tdata={this.state.chartData}\n\t\t\t\t\toptions={\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:{\n\t\t\t\t\t\t\tdisplay:true,\n\t\t\t\t\t\t\ttext:`Profile Views per Day / Month / Year`,\n\t\t\t\t\t\t\tfontSize:25\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend:{\n\t\t\t\t\t\t\tdisplay:true,\n\t\t\t\t\t\t\tposition:'bottom'\n                        },\n                        scales: {\n                            yAxes: [{\n                                ticks: {\n                                    beginAtZero:true,\n                                    min: 0  \n                                }\n                              }]\n                        }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t</div>\n\n\n\t\t</div>\n    )\n  }\n}\n\nexport default NumberOfViews;\n"]},"metadata":{},"sourceType":"module"}