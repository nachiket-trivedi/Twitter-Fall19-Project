{"ast":null,"code":"var _jsxFileName = \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/lists/viewListTweets.js\";\nimport React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport axios from 'axios';\nimport logo from \"../../svg/logo.svg\";\nimport '../../pages/home/home.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../search/search.js';\nimport Pranav from '../../svg/Pranav.jpeg';\nimport Kalyani from '../../svg/Kalyani.jpeg';\nimport Mukesh from '../../svg/Mukesh.jpeg';\nimport Kartik from '../../svg/Kartik.png';\nimport like from '../../svg/like.jpeg';\nimport retweet from '../../svg/retweet.jpeg';\nimport comment from '../../svg/comment.jpeg';\nimport bookmark from '../../svg/bookmark.jpeg';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, NavLink, Nav, NavItem, TabContent, TabPane } from 'reactstrap';\nlet allListsArr = [],\n    dispTweets,\n    listName,\n    listDesc,\n    listMembers,\n    ownedLists = null,\n    redirectVar = null;\nlet redirectToViewFlag = false,\n    redirectToView = null,\n    allListTweets = null,\n    displayTweets = [];\n\nclass ViewListTweets extends React.Component {\n  constructor(props) {\n    super(props);\n    let allListTweetsArr = JSON.parse(localStorage.getItem('listTweets'));\n    console.log('allListTweetsArr', allListTweetsArr);\n    let count = 0;\n    allListTweets = allListTweetsArr.map((twt, index) => {\n      console.log('twt deets', twt);\n      let name = twt['name'];\n      let tweetDeets = twt['tweets'];\n      displayTweets[count++] = tweetDeets.map(ele => {\n        return React.createElement(\"div\", {\n          className: \"tweetCard-indi\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Tweet-Image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          className: \"image\",\n          src: ele.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Tweet-Body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"Tweet-Body-Content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"Tweet-Body-Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, name), React.createElement(\"p\", {\n          className: \"Tweet-Body-Handle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, twt.userHandle), React.createElement(\"p\", {\n          className: \"Tweet-Body-Date\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, ele.date)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"Tweet-Body-Text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, ele.tweet)), React.createElement(\"div\", {\n          className: \"Tweet-Body-Panel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"Tweet-Body-Panel-Comment\",\n          onClick: this.commentTweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: \"likec\",\n          className: \"likeCount\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, ele.replies.length)), React.createElement(\"button\", {\n          className: \"Tweet-Body-Panel-ReTweet\",\n          onClick: this.retweetTweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: retweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: \"likec\",\n          className: \"likeCount\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, ele.retweets)), React.createElement(\"button\", {\n          className: \"Tweet-Body-Panel-Like\",\n          onClick: this.likeTweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: like,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          id: \"likec\",\n          className: \"likeCount\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, ele.likes)), React.createElement(\"button\", {\n          className: \"Tweet-Body-Panel-Bookmark\",\n          onClick: this.bookmarkTweet,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: bookmark,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }))));\n      });\n    });\n    this.setState({});\n  }\n\n  render() {\n    if (!localStorage.getItem('email')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tweetCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, redirectVar, displayTweets);\n  }\n\n}\n\nexport default ViewListTweets;","map":{"version":3,"sources":["/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/lists/viewListTweets.js"],"names":["React","useState","Button","axios","Navigation","RightSide","Pranav","Kalyani","Mukesh","Kartik","like","retweet","comment","bookmark","classnames","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Redirect","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","NavLink","Nav","NavItem","TabContent","TabPane","allListsArr","dispTweets","listName","listDesc","listMembers","ownedLists","redirectVar","redirectToViewFlag","redirectToView","allListTweets","displayTweets","ViewListTweets","Component","constructor","props","allListTweetsArr","JSON","parse","localStorage","getItem","console","log","count","map","twt","index","name","tweetDeets","ele","image","userHandle","date","tweet","commentTweet","replies","length","retweetTweet","retweets","likeTweet","likes","bookmarkTweet","setState","render"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button} from 'reactstrap';\nimport axios from 'axios';\nimport logo from '../../svg/logo.svg';\nimport '../../pages/home/home.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../search/search.js';\n\nimport Pranav from '../../svg/Pranav.jpeg';\nimport Kalyani from '../../svg/Kalyani.jpeg';\nimport Mukesh from '../../svg/Mukesh.jpeg';\nimport Kartik from '../../svg/Kartik.png';\n\nimport like from '../../svg/like.jpeg';\nimport retweet from '../../svg/retweet.jpeg';\nimport comment from '../../svg/comment.jpeg';\nimport bookmark from '../../svg/bookmark.jpeg';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport {Redirect} from 'react-router'\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, NavLink, Nav, NavItem, TabContent, TabPane\n} from 'reactstrap';\n\nlet allListsArr=[], dispTweets,listName, listDesc, listMembers, ownedLists=null, redirectVar=null;\n  \nlet redirectToViewFlag=false, redirectToView=null, allListTweets=null, displayTweets=[];\n\n\nclass ViewListTweets extends React.Component{\n    constructor(props) {\n      super(props)\n      let allListTweetsArr=JSON.parse(localStorage.getItem('listTweets'));\n      console.log('allListTweetsArr', allListTweetsArr)\n      let count=0;\n      allListTweets=allListTweetsArr.map((twt, index) =>{\n        console.log('twt deets', twt)\n        let name=twt['name']\n        let tweetDeets=twt['tweets']\n        displayTweets[count++]=tweetDeets.map((ele)=>{\n          return(\n            <div className=\"tweetCard-indi\">\n                    <div className=\"Tweet-Image\">\n                      <br/>\n                      <img className=\"image\" src={ele.image}/>\n                    </div>\n                    <div className=\"Tweet-Body\">\n                      <br/>\n                      <div className=\"Tweet-Body-Content\">\n                        <h5 className=\"Tweet-Body-Name\">{name}</h5>\n                        <p className=\"Tweet-Body-Handle\">{twt.userHandle}</p>\n                        <p className=\"Tweet-Body-Date\">{ele.date}</p>\n                      </div>\n                      <div>\n                        <p className=\"Tweet-Body-Text\">{ele.tweet}</p>\n                      </div>\n                      <div className=\"Tweet-Body-Panel\">\n                        <button className=\"Tweet-Body-Panel-Comment\" onClick={this.commentTweet}><img src={comment}/><span id=\"likec\" className=\"likeCount\">{ele.replies.length}</span></button>\n                        <button className=\"Tweet-Body-Panel-ReTweet\" onClick={this.retweetTweet}><img src={retweet}/><span id=\"likec\" className=\"likeCount\">{ele.retweets}</span></button>\n                        <button className=\"Tweet-Body-Panel-Like\" onClick={this.likeTweet}><img src={like}/><span id=\"likec\" className=\"likeCount\">{ele.likes}</span></button>\n                        <button className=\"Tweet-Body-Panel-Bookmark\" onClick={this.bookmarkTweet}><img src={bookmark}/></button>\n                        <br/>\n                        <br/>\n                        <br/>\n                      </div>\n                    </div>\n                  </div>\n          )\n        })\n      }\n      )\n      this.setState({})\n    }\n    render() {\n      if(!localStorage.getItem('email')){\n        redirectVar = <Redirect to= \"/\"/>\n    }\n      return(\n        <div className = \"tweetCard\">\n          {redirectVar}\n          {displayTweets}\n        </div>\n      );\n    }\n  }\n\nexport default ViewListTweets;"]},"metadata":{},"sourceType":"module"}