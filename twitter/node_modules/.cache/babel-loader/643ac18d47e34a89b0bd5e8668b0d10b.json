{"ast":null,"code":"var _jsxFileName = \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/pages/dashboard/topTenLiked.js\";\nimport React from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nlet response_data = [];\nlet labels = [];\n\nclass TopTenLiked extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentWillMount() {\n    axios.defaults.withCredentials = true;\n    axios.get('/dashboard/getTweets/' + localStorage.getItem('id')).then(response => {\n      console.log('data loaded is -------------->', response.data);\n      response_data = response.data;\n      response_data.sort((a, b) => a.likes < b.likes ? 1 : -1);\n      response_data = response_data.length > 10 ? response_data.slice(0, 10) : response_data;\n      let data = [];\n      let bc = [];\n\n      for (let tweet of response_data) {\n        data.push(tweet.likes);\n        labels.push(tweet.tweet);\n        let c = \"#xxxxxx\".replace(/x/g, y => (Math.random() * 16 | 0).toString(16));\n        bc.push(c);\n      }\n\n      this.setState({\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"Likes\",\n            data: data,\n            backgroundColor: bc\n          }]\n        }\n      });\n      console.log(data);\n    }).catch(error => {\n      console.log(\"Error: \" + JSON.stringify(error));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: \"Showing Top 10 Liked Tweets\",\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              min: 0\n            }\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TopTenLiked;","map":{"version":3,"sources":["/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/pages/dashboard/topTenLiked.js"],"names":["React","Bar","Doughnut","axios","response_data","labels","TopTenLiked","Component","constructor","props","state","chartData","componentWillMount","defaults","withCredentials","get","localStorage","getItem","then","response","console","log","data","sort","a","b","likes","length","slice","bc","tweet","push","c","replace","y","Math","random","toString","setState","datasets","label","backgroundColor","catch","error","JSON","stringify","render","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","min"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Bar, Doughnut} from 'react-chartjs-2';\nimport axios from 'axios';\n\nlet response_data = [\n];\n\nlet labels = []\n\nclass TopTenLiked extends React.Component {\n\n  constructor(props){\n\tsuper(props);\n\t\n\n    this.state = {\n    \tchartData :{\n\n      \t}\n    }\n    \n  }\n\n  componentWillMount(){\n\n    axios.defaults.withCredentials = true;\n    axios.get('/dashboard/getTweets/'+localStorage.getItem('id'))\n    .then(response => {\n        console.log('data loaded is -------------->',response.data)\n        response_data = response.data;\n        response_data.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\n        response_data = (response_data.length > 10) ? response_data.slice(0,10) : response_data;\n        let data = []\n        let bc = []\n\n        for(let tweet of response_data){\n            data.push(tweet.likes);\n            labels.push(tweet.tweet);\n            let c= \"#xxxxxx\".replace(/x/g, y=>(Math.random()*16|0).toString(16));\n            bc.push(c)\n        }\n    \n        this.setState({\n            chartData : {\n                labels : labels,\n                datasets : [\n                    {\n                        label : \"Likes\",\n                        data: data,\n                        backgroundColor : bc\n                    }\n                ]\n            }\n        })\n        console.log(data);\n    })\n    .catch(error=>{\n        console.log(\"Error: \"+JSON.stringify(error));\n    });\n\n  }\n\n  render(){\n\t\n    return(\n\t\t<div>\n\t\t\t<div className=\"chart\">\n\t\t\t\t<Doughnut\n\t\t\t\t\tdata={this.state.chartData}\n\t\t\t\t\toptions={\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle:{\n\t\t\t\t\t\t\tdisplay:true,\n\t\t\t\t\t\t\ttext:`Showing Top 10 Liked Tweets`,\n\t\t\t\t\t\t\tfontSize:25\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend:{\n\t\t\t\t\t\t\tdisplay:true,\n\t\t\t\t\t\t\tposition:'bottom'\n\t\t\t\t\t\t},\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero:true,\n                        min: 0  \n                    }\n                  }]\n            }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t</div>\n\n\n\t\t</div>\n    )\n  }\n}\n\nexport default TopTenLiked;\n"]},"metadata":{},"sourceType":"module"}