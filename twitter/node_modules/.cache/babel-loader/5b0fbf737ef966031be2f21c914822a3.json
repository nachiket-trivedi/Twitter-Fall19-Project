{"ast":null,"code":"var _jsxFileName = \"/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/profile/showUserLists.js\";\nimport React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport axios from 'axios';\nimport logo from \"../../svg/logo.svg\";\nimport '../../pages/home/home.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../../components/search/search.js';\nimport Pranav from '../../svg/Pranav.jpeg';\nimport Kalyani from '../../svg/Kalyani.jpeg';\nimport Mukesh from '../../svg/Mukesh.jpeg';\nimport Kartik from '../../svg/Kartik.png';\nimport like from '../../svg/like.jpeg';\nimport retweet from '../../svg/retweet.jpeg';\nimport comment from '../../svg/comment.jpeg';\nimport bookmark from '../../svg/bookmark.jpeg';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, NavLink, Nav, NavItem, TabContent, TabPane } from 'reactstrap';\nlet allListsArr = [],\n    dispTweets,\n    listName,\n    listDesc,\n    listMembers,\n    ownedLists = null,\n    subscribedLists = null,\n    memberLists = null;\nlet redirectToViewFlag = false,\n    redirectToView = null,\n    listTweets = null;\n\nclass ShowUserLists extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.subscribeList = (members, listName) => {\n      localStorage.setItem('listName', JSON.stringify(listName));\n      console.log(members); // let data={userHandle:localStorage.getItem('userHandle')}\n\n      let data = {\n        id: \"5de2f6f76156b960fccd9e01\"\n      };\n      axios.defaults.withCredentials = true; //very imp, sets credentials so that backend can load cookies\n\n      axios.post('/member/setSubscribers', data).then(response => {\n        console.log('setSubscribers response', response.data);\n        listTweets = response.data;\n        alert(\"Subscribed!\");\n        this.setState({});\n      }).catch(() => {\n        console.log('error in message lists');\n      });\n    };\n\n    let _data = {\n      userHandle: localStorage.getItem('otherUserHandle')\n    };\n    let token = localStorage.getItem('bearer-token');\n    axios.defaults.withCredentials = true; //very imp, sets credentials so that backend can load cookies\n\n    axios.post('/list/getList', _data).then(response => {\n      console.log('response allListsArr', response.data);\n      allListsArr = response.data['lists'];\n      ownedLists = allListsArr.map((twt, index) => React.createElement(\"div\", {\n        className: \"tweetCard-indi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Tweet-Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Tweet-Body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Tweet-Body-Content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"Tweet-Body-Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, twt.listName)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Tweet-Body-Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, twt.description)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Tweet-Body-Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Members: \", twt.members.join(','))), React.createElement(\"div\", {\n        className: \"Tweet-Body-Panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.subscribeList.bind(this, twt.members, twt.listName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Subscribe\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))));\n      this.setState({});\n    }).catch(() => {\n      console.log('error in getting lists');\n    });\n  }\n\n  render() {\n    if (redirectToViewFlag) {\n      redirectToView = React.createElement(Redirect, {\n        to: {\n          pathname: '/viewListTweetsPage',\n          state: {\n            listTweets: listTweets\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n      console.log('broo', JSON.stringify(listTweets));\n      redirectToViewFlag = false;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"tweetCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, redirectToView, ownedLists);\n  }\n\n}\n\nexport default ShowUserLists;","map":{"version":3,"sources":["/Users/nachikettrivedi/Desktop/WebDev/Twitter/TwitterSJSU/twitter/src/components/profile/showUserLists.js"],"names":["React","useState","Button","axios","Navigation","RightSide","Pranav","Kalyani","Mukesh","Kartik","like","retweet","comment","bookmark","classnames","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Redirect","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","NavLink","Nav","NavItem","TabContent","TabPane","allListsArr","dispTweets","listName","listDesc","listMembers","ownedLists","subscribedLists","memberLists","redirectToViewFlag","redirectToView","listTweets","ShowUserLists","Component","constructor","props","subscribeList","members","localStorage","setItem","JSON","stringify","console","log","data","id","defaults","withCredentials","post","then","response","alert","setState","catch","userHandle","getItem","token","map","twt","index","description","join","bind","render","pathname","state"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button} from 'reactstrap';\nimport axios from 'axios';\nimport logo from '../../svg/logo.svg';\nimport '../../pages/home/home.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Navigation from '../../nav/globalNav.js';\nimport RightSide from '../../components/search/search.js';\n\nimport Pranav from '../../svg/Pranav.jpeg';\nimport Kalyani from '../../svg/Kalyani.jpeg';\nimport Mukesh from '../../svg/Mukesh.jpeg';\nimport Kartik from '../../svg/Kartik.png';\n\nimport like from '../../svg/like.jpeg';\nimport retweet from '../../svg/retweet.jpeg';\nimport comment from '../../svg/comment.jpeg';\nimport bookmark from '../../svg/bookmark.jpeg';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from 'reactstrap';\nimport {Redirect} from 'react-router'\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, NavLink, Nav, NavItem, TabContent, TabPane\n} from 'reactstrap';\n\nlet allListsArr=[], dispTweets,listName, listDesc, listMembers, ownedLists=null, subscribedLists=null, memberLists=null;\nlet redirectToViewFlag=false, redirectToView=null, listTweets=null;\nclass ShowUserLists extends React.Component{\n\n    subscribeList=(members, listName)=>{\n        localStorage.setItem('listName',JSON.stringify(listName))\n        console.log(members)\n        // let data={userHandle:localStorage.getItem('userHandle')}\n        let data={id:\"5de2f6f76156b960fccd9e01\"}\n        axios.defaults.withCredentials = true;//very imp, sets credentials so that backend can load cookies\n        axios.post('/member/setSubscribers',data)\n          .then((response) => {\n              console.log('setSubscribers response',response.data)\n              listTweets=response.data\n              alert(\"Subscribed!\")\n              this.setState({})\n          })\n          .catch(()=>{console.log('error in message lists')})\n    }\n    constructor(props) {\n      super(props);\n      let data = {userHandle:localStorage.getItem('otherUserHandle')};\n      let token=localStorage.getItem('bearer-token');\n      axios.defaults.withCredentials = true;//very imp, sets credentials so that backend can load cookies\n      axios.post('/list/getList',data)\n        .then((response) => {\n            console.log('response allListsArr',response.data)\n            allListsArr=response.data['lists'];\n            ownedLists=allListsArr.map((twt, index) =>\n                <div className=\"tweetCard-indi\">\n                  <div className=\"Tweet-Image\">\n                    <br/>\n                  </div>\n                  <div className=\"Tweet-Body\">\n                    <br/>\n                    <div className=\"Tweet-Body-Content\">\n                      <h4 className=\"Tweet-Body-Name\">{twt.listName}</h4>\n                    </div>\n                    <div>\n                      <p className=\"Tweet-Body-Text\">{twt.description}</p>\n                    </div>\n                    <div>\n                      <p className=\"Tweet-Body-Text\">Members: {twt.members.join(',')}</p>\n                    </div>\n                    <div className=\"Tweet-Body-Panel\">\n                      <Button onClick={this.subscribeList.bind(this,twt.members,twt.listName)}>Subscribe</Button>\n                      <br/>\n                      <br/>\n                      <br/>\n                    </div>\n                  </div>\n                </div>\n            )\n            this.setState({})\n        })\n        .catch(()=>{console.log('error in getting lists')})\n    }\n\n    render() {\n     if(redirectToViewFlag)\n     {\n        redirectToView=<Redirect to={{pathname:'/viewListTweetsPage',\n        state:{listTweets:listTweets}}}/> \n        console.log('broo', JSON.stringify(listTweets))\n        redirectToViewFlag=false;\n     }\n      return(\n        <div className = \"tweetCard\">\n            {redirectToView}\n            {ownedLists}\n        </div>\n      );\n    }\n  }\n\nexport default ShowUserLists;"]},"metadata":{},"sourceType":"module"}